<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multicampus.gangwonActivity.mapper.BoardMapper">

    <select id="findAllWithUser"
            resultType="com.multicampus.gangwonActivity.dto.response.board.GetBoardListResponseDto"
            parameterType="com.multicampus.gangwonActivity.dto.response.board.SearchPageDto" > <!--보내줄 값-->
        SELECT b.boardNo, b.userNo, b.boardTitle, b.content, b.countLikes, b.boardCount, b.deletedTime, b.writtenTime, b.isReported,
        b.myCourseNo, u.userNick
        FROM board b LEFT JOIN user u ON b.userNo = u.userNo
        where deletedTime is null
        order by writtenTime desc
        limit #{size} <!--한 번에 몇개를 가져올 건지 제한 -->
        offset #{offset} <!--시작지점으로 부터 몇개씩 떨구거냐-->
    </select>

    <!--pafing을 할 때는 list랑 똑같은 조건으로 count 쿼리를 작성해야한다.-->
    <!-- 삭제되지 않은 게시글 카운드 -->
    <select id="countAllWithBoard" resultType="int">
        SELECT count(*)
        FROM board
        where deletedTime is null
        order by writtenTime desc
    </select>


    <select id="alreadyLiked" resultType="boolean" parameterType="map">
        SELECT EXISTS(
        SELECT 1 FROM boardLikesMappingTable
        WHERE boardNo = #{boardNo} AND userNo = #{userNo}
        )
    </select>

    <select id="findCommentsByBoardNo" resultType="com.multicampus.gangwonActivity.dto.response.board.GetBoardCommentListResponseDto"
            parameterType="com.multicampus.gangwonActivity.dto.response.board.SearchPageDto" >
        SELECT
        c.commentNo, c.boardNo, c.userNo, c.writtenTime, c.content, u.userNick
        FROM comment c LEFT JOIN user u ON c.userNo = u.userNo
        WHERE c.boardNo = #{boardNo}
        LIMIT #{searchPageDto.size}
        OFFSET #{searchPageDto.offset}
    </select>

    <select id="countAllWithComment" resultType="int" parameterType="map">
        SELECT count(*)
        FROM comment c
        WHERE c.boardNo = #{boardNo}
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="findBoardDetailWithUser" resultType="com.multicampus.gangwonActivity.dto.response.board.GetBoardDetailResponseDto">
        SELECT b.boardNo, b.userNo, b.boardTitle, b.content, b.countLikes, b.deletedTime, b.writtenTime, b.isReported,
        b.myCourseNo, b.boardCount, u.userNick
        FROM board b LEFT JOIN user u ON b.userNo = u.userNo
        WHERE b.boardNo = #{boardNo}
    </select>

    <select id="findAllImage" resultType="string">
        SELECT imageAddress FROM boardImage WHERE boardNo = #{boardNo}
    </select>

    <update id="incrementViewsByBoardNo" parameterType="long">
        update board set boardCount=boardCount+1
        where boardNo=#{boardNo}
    </update>

    <!-- 좋아요 수가 많은 상위 3개의 글을 가져오는 쿼리 추가 -->
    <select id="getBestPosts" resultType="com.multicampus.gangwonActivity.dto.response.board.GetBoardListResponseDto">
        SELECT b.boardNo, b.userNo, b.boardTitle, b.content, b.countLikes, b.boardCount, b.deletedTime, b.writtenTime, b.isReported,
        b.myCourseNo, u.userNick
        FROM board b LEFT JOIN user u ON b.userNo = u.userNo
        WHERE b.deletedTime IS NULL
        ORDER BY b.countLikes DESC
        LIMIT 3
    </select>

</mapper>
